name: Cypress E2E Tests

on:
  pull_request:
  push:
    branches: [main, dev]

jobs:
  cypress:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # pnpm + Node
      - uses: pnpm/action-setup@v2
        with:
          version: 8

      - uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'pnpm'

      # ───────── Install Dependencies ─────────
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile

      # ───────── Build Application ─────────
      - name: Build application
        run: pnpm build

      # --- NEW: Explicitly install Cypress binary ---
      - name: Install Cypress binary
        run: npx cypress install --force # --force ensures it downloads even if it thinks it's there
                                         # or simply: npx cypress install

      # ───────── Start Next.js server ─────────
      - name: Start Next.js server for E2E tests
        run: pnpm start -p 3000 & # Still run this in background
        env:
          DATABASE_URL: "postgresql://user:pw@localhost:5432/db"
          NEXTAUTH_SECRET: "ci-secret"
          RESEND_API_KEY: "dummy"
          GOOGLE_CLIENT_ID: "dummy"
          GOOGLE_CLIENT_SECRET: "dummy"

      # Wait until server responds on port 3000 (using npx wait-on, not action's internal)
      - name: Wait for server to be ready
        run: npx wait-on http://localhost:3000 --timeout 120000

      # ───────── Run Cypress Tests ─────────
      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          # Since we explicitly installed Cypress and started the server:
          # No need for `install-command`, `start`, `wait-on`, `wait-on-timeout` here.
          # The action will just use the pre-installed Cypress and the already running server.
          # This should make the action's job simpler and less prone to internal conflicts.
          browser: chrome
          # record: true # if you're recording to Cypress Dashboard
          # group: 'CI' # if you're using groups
          # Other Cypress specific options as needed
          # spec: 'cypress/e2e/**/*.cy.js' # if you need to specify specs

      # If you want to capture screenshots/videos on failure (recommended)
      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      - uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: cypress/videos